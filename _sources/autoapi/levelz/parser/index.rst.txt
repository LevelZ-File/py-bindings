levelz.parser
=============

.. py:module:: levelz.parser


Attributes
----------

.. autoapisummary::

   levelz.parser.HEADER_END
   levelz.parser.END


Classes
-------

.. autoapisummary::

   levelz.parser.Coordinate2D
   levelz.parser.Coordinate3D
   levelz.parser.Block
   levelz.parser.LevelObject
   levelz.parser.Level2D
   levelz.parser.Level3D


Functions
---------

.. autoapisummary::

   levelz.parser.parse_level
   levelz.parser.parse_file
   levelz.parser.parse_lines
   levelz.parser.__split
   levelz.parser.__objectify
   levelz.parser.__roll
   levelz.parser.__readHeaders
   levelz.parser.__read2DPoints
   levelz.parser.__read3DPoints
   levelz.parser.__readLine
   levelz.parser.__readBlock
   levelz.parser.__readRawBlock


Module Contents
---------------

.. py:class:: Coordinate2D(x: float, y: float)

   Bases: :py:obj:`Coordinate`


   Represents a 2-Dimensional Coordinate.


   .. py:attribute:: x
      :type:  float
      :value: 0


      The x-coordinate of the 2D Coordinate.



   .. py:attribute:: y
      :type:  float
      :value: 0


      The y-coordinate of the 2D Coordinate.



   .. py:property:: magnitude
      Return the magnitude of the coordinate.



   .. py:property:: dimension
      Return the dimension of the coordinate.



   .. py:method:: __str__()

      Return str(self).



   .. py:method:: __eq__(other)

      Return self==value.



   .. py:method:: from_string(s: str)
      :staticmethod:


      Parses a string to create a 2D Coordinate.

      :param str s: The string to parse.
      :return: The 2D Coordinate.
      :rtype: Coordinate2D



.. py:class:: Coordinate3D(x: float, y: float, z: float)

   Bases: :py:obj:`Coordinate`


   Represents a 3-Dimensional Coordinate.


   .. py:attribute:: x
      :type:  float
      :value: 0


      The x-coordinate of the 3D Coordinate.



   .. py:attribute:: y
      :type:  float
      :value: 0


      The y-coordinate of the 3D Coordinate.



   .. py:attribute:: z
      :type:  float
      :value: 0


      The z-coordinate of the 3D Coordinate.



   .. py:property:: magnitude
      Return the magnitude of the coordinate.



   .. py:property:: dimension
      Return the dimension of the coordinate.



   .. py:method:: __str__()

      Return str(self).



   .. py:method:: __eq__(other)

      Return self==value.



   .. py:method:: from_string(s: str)
      :staticmethod:


      Parses a string to create a 3D Coordinate.

      :param str s: The string to parse.
      :return: The 3D Coordinate.
      :rtype: Coordiante3D



.. py:class:: Block(name: str, properties: dict[str, object] = {})

   Represents a Block in a Level.


   .. py:attribute:: _name
      :type:  str
      :value: ''



   .. py:attribute:: _properties
      :type:  dict[str, object]


   .. py:property:: name
      Returns the name of the Block.



   .. py:property:: properties
      Returns an immutable copy of the properties for the Block.



   .. py:method:: __str__()

      Return str(self).



   .. py:method:: __eq__(other)

      Return self==value.



.. py:class:: LevelObject(block: Block | str, coordinate: levelz.coord.Coordinate | list[int | float])

   Utility Object for representing a Level Block and its Coordinate.


   .. py:attribute:: _block
      :type:  Block


   .. py:attribute:: _coordinate
      :type:  levelz.coord.Coordinate


   .. py:property:: block
      Returns the Block of the LevelObject.



   .. py:property:: coordinate
      Returns the Coordinate of the LevelObject.



   .. py:method:: __str__()

      Return str(self).



   .. py:method:: __eq__(other)

      Return self==value.



.. py:class:: Level2D(headers: dict[str, object] = {}, blocks: list[levelz.block.LevelObject] = [])

   Bases: :py:obj:`Level`


   Represents a 2D Level.


   .. py:property:: scroll
      Returns the Scroll of the Level.



   .. py:property:: spawn
      Returns the spawn point of the Level.



.. py:class:: Level3D(headers: dict[str, object] = {}, blocks: list[levelz.block.LevelObject] = [])

   Bases: :py:obj:`Level`


   Represents a 3D Level.


   .. py:property:: spawn
      Returns the spawn point of the Level.



.. py:data:: HEADER_END
   :value: '---'


   The end of the Header section.


.. py:data:: END
   :value: 'end'


   The end of a Level.


.. py:function:: parse_level(level: str)

   Parses a Level from a string. Uses '\n' as the line separator.


.. py:function:: parse_file(file: str)

   Parses a Level from a file.


.. py:function:: parse_lines(level: list[str])

   Parses a Level from a list of strings.


.. py:function:: __split(level: list[str])

.. py:function:: __objectify(input: str)

.. py:function:: __roll(blocks: list[levelz.block.Block], chances: list[float])

.. py:function:: __readHeaders(headers: list[str])

.. py:function:: __read2DPoints(input: str)

.. py:function:: __read3DPoints(input: str)

.. py:function:: __readLine(input: str, threeD: bool = False)

.. py:function:: __readBlock(line: str)

.. py:function:: __readRawBlock(input: str)

